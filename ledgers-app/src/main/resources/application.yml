# Copyright 2018-2018 adorsys GmbH & Co KG
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
server:
  # Authorization HTTP header requires to enlarge max header size.
  max-http-header-size: 65000
  port: 8088

spring:
  application.name: ledgers
  servlet.multipart.enabled: true
  servlet.multipart.file-size-threshold: 2KB
  servlet.multipart.max-file-size: 2MB
  servlet.multipart.max-request-size: 2MB
  datasource:
    username: ${db.user}
    password: ${db.password}
    url: ${db.url}
  jpa:
    show-sql: false
    generate-ddl: false
    hibernate:
      ddl-auto: validate
    properties:
      hibrenate.globally_quoted_identifiers: true
      hibernate.jdbc.lob.non_contextual_creation: true
      hibernate.naming-strategy: org.hibernate.cfg.ImprovedNamingStrategy
  jackson:
    serialization:
      write_dates_as_timestamps: false
  mail:
    default-encoding: UTF-8
    host: localhost
    port: 2500
#    properties:
#      mail:
#        smtp:
#          auth: false

logging:
  level:
    org:
      hibernate: WARN

paymentScheduler:
  initialDelay: 3000
  delay: 300000      #300 000 = 5 minutes delay between execution/rescheduling operations

sca:
  authCode:
    validity.seconds: 180
    expiration:
      cron: "*/5 0 0 * * *" # every 5 seconds
    email:
      subject: "Your TAN from MockBank"
      body: "TAN: %s"
      from: noreply@adorsys.de
    phone:
      subject: "Your TAN from MockBank"
  multilevel.enabled: true
  final.weight: 100

user-service:
  jwt.hs256.secret: 6VFX8YFQG5DLFKZIMNLGH9P406XR1SY4

# Cors configuration
management:
  endpoints:
    web:
      cors:
        allow-credentials: true
        allowed-origins: "*"
        allowed-headers: Access-Control-Allow-Headers, Content-Type, Origin, X-Requested-With, Cookie, Authorization
        allowed-methods: GET,POST,PUT,DELETE,OPTIONS,PATCH
        max-age: 3600

---
spring:
  profiles: h2
  h2:
    console:
      enabled: true
      path: /console
  liquibase:
    change-log: classpath:liquibase-master-changelog.xml

db:
  user: sa
  password: sa
  url: jdbc:h2:~/ledgersdbs/ledgers-app;DB_CLOSE_DELAY=-1
---
spring:
  profiles: postgres
  datasource:
    url: ${db.url}
    username: ${db.user}
    password: ${db.password}
  liquibase:
    enabled: true
    change-log: classpath:liquibase-master-changelog.xml
db:
  host: localhost
  user: cms
  password: cms
  database: consent
  port: 5432
  url: jdbc:postgresql://${db.host}:${db.port}/${db.database}?currentSchem=ledgers
---
# hibernate-ddl profile is used to fully initialize the database
# from ddl generation and rest based upload of test data.
# Result can be used by liquibase to produce a diff change log
# instead of writing the change log manually.
#
# Following Profiles are possible:
# --spring.profiles.active=h2,hibernate-ddl -> running on h2.
# --spring.profiles.active=postgres,hibernate-ddl -> running on postgres.
#       -> use the config docker-compose-postgres-5433.yml to start postgres on port 5433.
#       -> Start db with: $ docker-compose -f docker-compose-postgres-5433.yml up
#       -> make sure the existing volume is deleted if one.
spring:
  profiles: hibernate-ddl
  jpa:
    show-sql: false
    generate-ddl: true
    hibernate:
      ddl-auto: none
  liquibase:
    enabled: true
    change-log: classpath:liquibase-master-changelog.xml
db:
  port: 5433

# Default value set in application. de.adorsys.ledgers.middleware.client.rest.Ledgers#URL.LEDGERS_URL
# ledgers.url: http://localhost:${server.port}
---
spring:
  profiles: dev

logging.level.org.postgresql: INFO
logging.level.org.hibernate.SQL: DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder: TRACE
logging.level.org.springframework: TRACE

management.endpoints.web.exposure.include: "*"
management.endpoints.web.exposure.exclude: env,beans
