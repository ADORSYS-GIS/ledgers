<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>de.adorsys.ledgers</groupId>
		<artifactId>ledgers-mockbank</artifactId>
		<version>0.4-SNAPSHOT</version>
		<relativePath>..</relativePath>
	</parent>

	<artifactId>ledgers-mockbank-simple</artifactId>
	<name>ledgers-mockbank-simple</name>

	<properties>
		<ruleset.basedir>../..</ruleset.basedir>
	</properties>

	<dependencies>
		<dependency>
			<groupId>de.adorsys.ledgers</groupId>
			<artifactId>ledgers-middleware-rest-client</artifactId>
			<version>${project.version}</version>
		</dependency>

		<dependency>
			<groupId>de.adorsys.ledgers</groupId>
			<artifactId>ledgers-utils</artifactId>
			<version>${project.version}</version>
		</dependency>


		<!-- spring dependencies -->

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
		</dependency>

		<!-- other dependencies -->

		<dependency>
			<groupId>org.mapstruct</groupId>
			<artifactId>mapstruct-jdk8</artifactId>
		</dependency>

		<dependency>
			<groupId>pro.javatar.commons</groupId>
			<artifactId>javatar-commons</artifactId>
			<version>${javatar-commons.version}</version>
		</dependency>

		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- Need these service because we are activating the module from their 
			implementation packages. -->
		<dependency>
			<groupId>de.adorsys.ledgers</groupId>
			<artifactId>ledgers-middleware-rest-server</artifactId>
			<version>${project.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>de.adorsys.ledgers</groupId>
			<artifactId>ledgers-deposit-account-service-impl</artifactId>
			<version>${project.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>de.adorsys.ledgers</groupId>
			<artifactId>ledgers-user-management-service-impl</artifactId>
			<version>${project.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>de.adorsys.ledgers</groupId>
			<artifactId>ledgers-sca-service-impl</artifactId>
			<version>${project.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>de.adorsys.ledgers</groupId>
			<artifactId>ledgers-postings-service-impl</artifactId>
			<version>${project.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>de.adorsys.ledgers</groupId>
			<artifactId>ledgers-middleware-service-impl</artifactId>
			<version>${project.version}</version>
			<scope>test</scope>
		</dependency>

		<!-- test dependencies -->

		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-core</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.dbunit</groupId>
			<artifactId>dbunit</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<artifactId>junit</artifactId>
					<groupId>junit</groupId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>com.github.springtestdbunit</groupId>
			<artifactId>spring-test-dbunit</artifactId>
			<scope>test</scope>
		</dependency>
		<!-- Runtime dependencies -->

	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>3.1.1</version>
				<executions>
					<execution>
						<id>copy</id>
						<phase>package</phase>
						<goals>
							<goal>copy</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<artifactItems>
						<artifactItem>
							<!-- https://mvnrepository.com/artifact/com.github.tntim96/fakesmtp -->
							<groupId>com.github.tntim96</groupId>
							<artifactId>fakesmtp</artifactId>
							<version>2.0</version>
							<type>jar</type>
							<overWrite>false</overWrite>
							<outputDirectory>${project.build.directory}/fakesmtp</outputDirectory>
							<destFileName>fakesmtp.jar</destFileName>
						</artifactItem>
					</artifactItems>
					<overWriteReleases>false</overWriteReleases>
					<overWriteSnapshots>true</overWriteSnapshots>
				</configuration>
			</plugin>
			<plugin>
				<groupId>com.bazaarvoice.maven.plugins</groupId>
				<artifactId>process-exec-maven-plugin</artifactId>
				<version>0.7</version>
				<executions>
					<!-- MAIL SERVER -->
					<execution>
						<id>faksmtp-process</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>start</goal>
						</goals>
						<configuration>
							<name>FAKE SMTP</name>
							<workingDir>${project.build.directory}/fakesmtp</workingDir>
							<!-- java -jar target/fakesmtp/fakesmtp.jar -s -b -p 2500 -o target/fakesmtp/mails -->
							<waitAfterLaunch>2</waitAfterLaunch><!-- 2 seconds -->
							<arguments>
								<argument>java</argument>
								<argument>-jar</argument>
								<argument>${project.build.directory}/fakesmtp/fakesmtp.jar</argument>
								<argument>-s</argument>
								<argument>-b</argument>
								<argument>-p</argument>
								<argument>2500</argument>
								<argument>-o</argument>
								<argument>${project.build.directory}/fakesmtp/mails</argument>
							</arguments>
						</configuration>
					</execution>
					<!--STOP ALL -->
					<execution>
						<id>stop-all</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>stop-all</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>

