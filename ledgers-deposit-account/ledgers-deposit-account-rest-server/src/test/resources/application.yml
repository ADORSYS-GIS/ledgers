# Copyright 2018-2018 adorsys GmbH & Co KG
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
server:
  # Authorization HTTP header requires to enlarge max header size.
  max-http-header-size: 65000
  port: 8088

springdoc.swagger-ui.oauth.clientId: ${keycloak.resource}
springdoc.swagger-ui.oauth.clientSecret: ${keycloak.credentials.secret}

keycloak:
  auth-server-url: http://localhost:8080
  realm: ledgers
  resource: ledgers-client
  public-client: false
  principal-attribute: preferred_username
  credentials:
    secret: a61a81cd-7178-40d8-8386-ed02791e6592 #Here should be personal generated secret for client (swap public to 'private?' generate secret, swap to public again)

keycloak-sync:
  admin:
    username: admin
    password: admin

springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html


spring:
  main:
    allow-bean-definition-overriding: true
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${keycloak.auth-server-url}/realms/ledgers
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher

  application.name: ledgers
  servlet.multipart.enabled: true
  servlet.multipart.file-size-threshold: 2KB
  servlet.multipart.max-file-size: 2MB
  servlet.multipart.max-request-size: 2MB
  datasource:
    username: ${db.user}
    password: ${db.password}
    url: ${db.url}
  jpa:
    show-sql: false
    generate-ddl: false
    hibernate:
      ddl-auto: create-drop
    properties:
      hibernate.globally_quoted_identifiers: false
      hibernate.jdbc.lob.non_contextual_creation: true
      hibernate.naming-strategy: org.hibernate.cfg.ImprovedNamingStrategy
      hibernate.jdbc.batch_size: 100
      hibernate.order_inserts: true
      hibernate.order_updates: true
      hibernate.batch_versioned_data: true
    open-in-view: false
  jackson:
    serialization:
      write_dates_as_timestamps: false
  mail:
    default-encoding: UTF-8
    host: smtp.gmail.com
    port: 465
    username: modelbank.mail@gmail.com
    password: password
    properties:
      smtp:
        auth: true
        ssl: true
        start-tls: false
        from: modelbank.mail@gmail.com
        from-display-name: Ledgers
        envelope-from: modelbank.mail@gmail.com
        reply-to: modelbank.mail@gmail.com
        reply-to-display-name: Ledgers support

logging:
  level:
    org:
      springframework: INFO

ledgers:
  users:
    default-migration-pin: 12345
  xs2a:
    funds-confirmation-user-login: admin
    funds-confirmation-user-password: admin123
  paymentScheduler:
    initialDelay: 3000
    delay: 300000      #300 000 = 5 minutes delay between execution/rescheduling operations

  payment-products:
    instant:
      instant-sepa-credit-transfers,
      target-2-payments,
      domestic-swiss-credit-transfers-isr,
      domestic-swiss-foreign-credit-transfers,
      pain.001-swiss-six-credit-transfers,
      pain.001-instant-sepa-credit-transfers,
      pain.001-target-2-payments,
    regular:
      sepa-credit-transfers,
      cross-border-credit-transfers,
      domestic-swiss-credit-transfers,
      pain.001-sepa-credit-transfers,
      pain.001-cross-border-credit-transfers

  payment_mapping.path:

  token:
    lifetime:
      seconds:
        sca: 10800
        full: 7776000

  sca:
    authCode.failed.max: 3
    authCode:
      validity.seconds: 180
      expiration:
        cron: "*/5 0 0 * * *" # every 5 seconds
      email:
        subject: "Your TAN from MockBank"
        body: "TAN: %s"
        from: noreply@adorsys.de
      phone:
        subject: "Your TAN from MockBank"
      push:
        body: "User: %s initiated an operation : %s requiring TAN confirmation, TAN is: %s"
      app_otp:
        template: "Do you confirm your %s id: %s " #Do you confirm your 'Payment/Consent' id: 'XXXX'
        socket_service:
          httpMethod: POST
          url: http://localhost:8090/api/v1/decoupled/message
    multilevel.enabled: true
    authorisation_confirmation_enabled: false
    final.weight: 100
    challenge_data:
      path:

  verify:
    template:
      subject: "Please verify your email address"
      from: noreply@adorsys.de
      message:
        "Hello. Please verify your email address by clicking the following link: %s
        \n
        Please note that the above link is only valid until %s.
        \n
        This is an automatically generated email â€“ please do not reply to it. If you have any queries regarding your order, please email us at info@tpp.com.
        \n\n
        Best wishes,\n
        ModelBank team"
    ext_base_path: http://localhost:8088
    endpoint: /emails/email
    page:
      success: http://localhost:4400/email-confirmation/success
      fail: http://localhost:4400/email-confirmation/fail

  #Supported currencies
  currency:
    default: EUR
    currencies:
      - EUR
      - USD
      - CHF
      - GBP

  #TanEncryption
  application:
    security:
      masterPassword: $VoL973@sd
      encryptorAlgorithm: PBEWITHSHA1ANDDESEDE

  # Oauth properties
  oauth:
    ext_base_path: http://localhost:4400
    lifetime:
      auth_code: 2
      access_token: 5
      refresh_token: 15
    authorization_endpoint: ${ledgers.ext_oauth.base_path}/oauth/authorise
    token_endpoint: ${ledgers.oauth.ext_base_path}/oauth/token
    response_types_supported:
      - CODE
    grant_types_supported:
      - AUTHORISATION_CODE

  payment_validator:
    allow_past_dates: false
    allow_same_end_to_end_ids: false
# Cors configuration
management:
  endpoints:
    web:
      cors:
        allow-credentials: true
        allowed-origin-patterns: "*"
        allowed-headers: Access-Control-Allow-Headers, Content-Type, Origin, X-Requested-With, Cookie, Authorization
        allowed-methods: GET,POST,PUT,DELETE,OPTIONS,PATCH
        max-age: 3600
    enabled-by-default: false
  endpoint:
    info:
      enabled: true
    health:
      enabled: true
  health:
    mail:
      enabled: false
---
spring:
  config:
    activate:
      on-profile: h2
  h2:
    console:
      enabled: true
      path: /console

db:
  user: sa
  password: sa
  url: jdbc:h2:~/ledgersdbs/ledgers-app;DB_CLOSE_DELAY=-1
# Default value set in application. de.adorsys.ledgers.middleware.client.rest.Ledgers#URL.LEDGERS_URL
# ledgers.url: http://localhost:${server.port}
---
spring:
  config:
    activate:
      on-profile: dev

management.endpoints.web.exposure.include: "*"
management.endpoints.web.exposure.exclude: env,beans
