# ------------------------------------------------------------------
# stages
# ------------------------------------------------------------------

stages:
- "build"    # build jar and provide as artifact
#- "build:image"  # dockerize jar and push to gitlab registry

# ------------------------------------------------------------------
# variables
# ------------------------------------------------------------------

variables: &variables

  ###########################
  # Docker images variables #
  ###########################

  GITLAB_REGISTRY: "gitlab-registry.adorsys.de"
  GITLAB_NAMESPACE: "adorsys/xs2a/ledgers"

  # XS2A Service
  GITLAB_IMAGE_NAME_XS2A: "${GITLAB_REGISTRY}/${GITLAB_NAMESPACE}/ledgers"

  ###########################
  # Build variables         #
  ###########################

  JAVA_TOOL_OPTIONS: "-Xmx450M"
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"


# ------------------------------------------------------------------
# reusable yaml anchors
# ------------------------------------------------------------------

.build_java: &build_java
  image: "adorsys/openjdk-build-base:8"
  script:
    - mvn clean install pmd:pmd pmd:check javadoc:javadoc

# Build docker images and put them to GITLAB repo
#.build_docker_image: &build_docker_image
#  script:
#    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $GITLAB_REGISTRY
#
#    - docker build -t "$GITLAB_IMAGE_NAME_XS2A:$DOCKER_TAG" spi-mock
#    - docker push "$GITLAB_IMAGE_NAME_XS2A:$DOCKER_TAG"


# ------------------------------------------------------------------
# jobs
# ------------------------------------------------------------------

build_package:
  stage: "build"
  artifacts:
    paths:
    - "spi-mock/target/spi-mock*jar"
    - "qa/pmd/pmd-ruleset.xml"
    - "**/**/*/pmd.html"
    - "**/*/pmd.xml"
    - "**/target/site/*"
    - "**/target/surefire-reports/*"
    name: "$CI_PROJECT_NAME-${CI_BUILD_REF_NAME#*v}-pmd"
    expire_in: "10 day"
  <<: *build_java


# Develop

#build_image_integ:
#  stage: "build:image"
#  only:
#    - develop
#  variables:
#    DOCKER_TAG: develop
#  <<: *build_docker_image

# Master

#build_image_master:
#  stage: "build:image"
#  only:
#    - master
#  variables:
#    DOCKER_TAG: latest
#  <<: *build_docker_image

# Release

#build_image_release:
#  stage: "build:image"
#  only:
#    - tags
#  variables:
#    DOCKER_TAG: $CI_COMMIT_TAG
#  <<: *build_docker_image

# Integ tests
#
#build_image_integtest:
#  stage: "build:image"
#  only:
#    - schedules
#  variables:
#    DOCKER_TAG: nightly
#  <<: *build_docker_image

